/**
 * Module: 		PackagesUI.ycp
 *
 * Authors:		Gabriele Strattner (gs@suse.de)
 *
 * Purpose: 		Provides a number of common popups
 *			for the package installation.
 *
 * $Id$
 */

{

    module "PackagesUI";
    textdomain "packager";
    import "Label";


    //
    // Popup displays helptext
    //
    global define any DisplayHelpMsg( string headline, term helptext, symbol color, integer vdim ) ``{

	term dia_opt = `opt ( `decorated );

	if ( color == `warncolor )
	{
	    dia_opt =  `opt ( `decorated, `warncolor );
	}
	else if ( color == `infocolor )
	{
	    dia_opt =  `opt ( `decorated, `infocolor );
	}

	term header = `Empty();
	if ( headline != "" )
	    header = `Left(`Heading( headline ));

	UI::OpenDialog( dia_opt,
		    `HBox( `VSpacing(vdim),
			   `VBox (`HSpacing(50),
				  header,
				  `VSpacing(0.2),
				  helptext,	// e.g. `Richtext()
				  `PushButton( `id(`ok_help), `opt(`default), Label::OKButton() )
				  )
			   )
		    );

	UI::SetFocus(`id(`ok_help) );

	any r = UI::UserInput();
	UI::CloseDialog();
	return r;
    }

    /**
     * Display unconfirmed licenses of the selected packages.
     * @return boolean true when all licenses were accepted (or there was no license to confirm)
     */
    global define boolean ConfirmLicenses ()
    {
	boolean ret = true;

	list<string> to_install = Pkg::GetPackages (`selected, true);
	map<string,string> licenses = Pkg::PkgGetLicensesToConfirm (to_install);

	y2milestone("Licenses to confirm: %1", licenses);

	map display_info = UI::GetDisplayInfo();
	integer size_x = tointeger(display_info["Width"]:800);
        integer size_y = tointeger(display_info["Height"]:600);
        if (size_x >= 800 && size_y >= 600) {
                size_x = 80;
               size_y = 20;
        } else {
                size_x = 54;
                size_y = 15;
        }

	foreach (string package,  string license, licenses, {
		term popup = `VBox (
		    `HSpacing (size_x),
		    // dialog heading, %1 is package name
		    `Heading (sformat (_("Confirm Package License: %1"),
			package)),
		    `HBox (
			`VSpacing (size_y),
			`RichText (`id (`lic), license)
		    ),
		    `HBox (
			`PushButton (`id (`help), Label::HelpButton ()),
			`HStretch (),
			// push button
			`PushButton (`id (`accept), _("I &Agree")),
			// push button
			`PushButton (`id (`deny), _("I &Disagree"))
		    )
		);
		UI::OpenDialog (popup);
		symbol ui = nil;
		while (ui == nil)
		{
		    ui = (symbol)UI::UserInput ();
		    if (ui == `help)
		    {
			ui = nil;
			// help text
			string help = _("<p><b><big>License Confirmation</big></b><br>
The package in the headline of the dialog requires an explicit confirmation
of acceptance of its license.
If you reject the license of the package, the package will not be installed.
<br>
To accept the license of the package, click <b>I Agree</b>.
To reject the license of the package, click <b>I Disagree</b></p>.");
			UI::OpenDialog (`HBox (
			    `VSpacing (18),
			    `VBox (
				`HSpacing (70),
				`RichText (help),
				`HBox (
				    `HStretch (),
				    // push button
				    `PushButton (`id (`close), Label::CloseButton ()),
				    `HStretch ()
				)
			    )
			));
			UI::UserInput ();
			UI::CloseDialog ();
		    }
		}
		UI::CloseDialog ();

		y2milestone("License of package %1 accepted: %2", package, ui == `accept);

		if (ui != `accept)
		{
		    Pkg::PkgTaboo (package);
		    ret = false;
		}
		else
		{
		    Pkg::PkgMarkLicenseConfirmed (package);
		}
	});

	return ret;
    }

}

Dump	TEST 1: argument test_input1 -> install tuxeyes/xroach, userInput true
Read	.probe.architecture "i386"
Read	.target.root "/"
Read	.run.df [$["dummy":"on", "free":"Available", "name":"Mounted", "prz":"Capacity", "spec":"Filesystem", "used":"Used", "whole":"1024-blocks"], $["free":"144988", "name":"/", "prz":"93%", "spec":"/dev/sda1", "used":"1733600", "whole":"1981000"], $["free":"2124147", "name":"/usr", "prz":"66%", "spec":"/dev/sda3", "used":"4080331", "whole":"6543449"]]
SW_SINGLE: partition input: [$["free":144988, "name":"/", "used":1733600], $["free":2124147, "name":"usr", "used":4080331]]
SW_SINGLE: POSTFIX: put1
Default value: no key 'ycp' in $["root":"/"]
Read	.target.ycp "/var/lib/YaST2/installmap.ycp" $[]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 0
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 0
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "test -f test_input1" 0
SW_SINGLE installList: ["xroach", "tuxeyes"]
SW_SINGLE deleteList: []
SW_SINGLE userInput: false
Default value: no key 'yast2' in $["root":"/"]
Read	.target.yast2 "test/test_target_map.ycp" $[]
SW_SINGLE: Writing install_info: [["fun1/tuxeyes.rpm", "Tux mit rollenden Augen", 1, false], ["fun2/xroach.rpm", "Kakerlaken - Gimmick", 1, false]]
SW_SINGLE: Usersettings: $["architecture":"i386", "continue_mode":false, "delete_info":[], "installMap":$["bootmode":"CD", "cdrom":"cdrom", "current_cd_device":0, "release_no":1234], "install_info":[["fun1/tuxeyes.rpm", "Tux mit rollenden Augen", 1, false], ["fun2/xroach.rpm", "Kakerlaken - Gimmick", 1, false]], "language":"de_DE", "post_install":true, "targetroot":"/", "test_mode":true]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 0
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 0
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Default value: no key 'target' in $[]
Write	.target.ycp "/tmp/pacs_to_install.ycp" [] true
Execute	.target.bash "/bin/umount /var/adm/mount" 0
Execute	.target.bash "/bin/umount /var/adm/mount" 0
Return	`next
Dump	TEST 2: argument test_input2 -> install 3d_chess, delete  tuxeyes/xroach, userInput false
Read	.probe.architecture "i386"
Read	.target.root "/"
Read	.run.df [$["dummy":"on", "free":"Available", "name":"Mounted", "prz":"Capacity", "spec":"Filesystem", "used":"Used", "whole":"1024-blocks"], $["free":"144988", "name":"/", "prz":"93%", "spec":"/dev/sda1", "used":"1733600", "whole":"1981000"], $["free":"2124147", "name":"/usr", "prz":"66%", "spec":"/dev/sda3", "used":"4080331", "whole":"6543449"]]
SW_SINGLE: partition input: [$["free":144988, "name":"/", "used":1733600], $["free":2124147, "name":"usr", "used":4080331]]
SW_SINGLE: POSTFIX: put2
Default value: no key 'ycp' in $["root":"/"]
Read	.target.ycp "/var/lib/YaST2/installmap.ycp" $[]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 0
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 0
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "test -f test_input2" 0
SW_SINGLE installList: ["3d_chess"]
SW_SINGLE deleteList: ["xroach", "tuxeyes"]
SW_SINGLE userInput: true
Default value: no key 'yast2' in $["root":"/"]
Read	.target.yast2 "test/test_target_map.ycp" $[]
SW_SINGLE: Writing install_info: [["fun2/3d_chess.rpm", "3-dimensionales Schachspiel", 1, false]]
SW_SINGLE: Usersettings: $["architecture":"i386", "continue_mode":false, "delete_info":[["fun1/tuxeyes.rpm", "Tux mit rollenden Augen", 1, false], ["fun2/xroach.rpm", "Kakerlaken - Gimmick", 1, false]], "installMap":$["bootmode":"CD", "cdrom":"cdrom", "current_cd_device":0, "release_no":1234], "install_info":[["fun2/3d_chess.rpm", "3-dimensionales Schachspiel", 1, false]], "language":"de_DE", "post_install":true, "targetroot":"/", "test_mode":true]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 0
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 0
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Default value: no key 'target' in $[]
Write	.target.ycp "/tmp/pacs_to_install.ycp" [] true
Execute	.target.bash "/bin/umount /var/adm/mount" 0
Execute	.target.bash "/bin/umount /var/adm/mount" 0
Return	`next
Dump	TEST 3: argument is package jpilot (depAND: pilot-link)
Read	.probe.architecture "i386"
Read	.target.root "/"
Read	.run.df [$["dummy":"on", "free":"Available", "name":"Mounted", "prz":"Capacity", "spec":"Filesystem", "used":"Used", "whole":"1024-blocks"], $["free":"144988", "name":"/", "prz":"93%", "spec":"/dev/sda1", "used":"1733600", "whole":"1981000"], $["free":"2124147", "name":"/usr", "prz":"66%", "spec":"/dev/sda3", "used":"4080331", "whole":"6543449"]]
SW_SINGLE: partition input: [$["free":144988, "name":"/", "used":1733600], $["free":2124147, "name":"usr", "used":4080331]]
SW_SINGLE: POSTFIX: ilot
Default value: no key 'ycp' in $["root":"/"]
Read	.target.ycp "/var/lib/YaST2/installmap.ycp" $[]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 1
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 1
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "test -f jpilot" 1
SW_SINGLE installList: ["jpilot"]
SW_SINGLE deleteList: []
SW_SINGLE userInput: false
Default value: no key 'yast2' in $["root":"/"]
Read	.target.yast2 "test/test_target_map.ycp" $[]
SW_SINGLE: Writing install_info: [["ap2/pilot-link.rpm", "PalmPilot Link Tool (Backup, Memo etc.)", 1, false], ["perl2/perl-PDA-Pilot.rpm", "PalmPilot Perl Module", 1, false], ["xap2/jpilot.rpm", "PalmPilot Desktop f\303\274r Linux", 1, false]]
SW_SINGLE: Usersettings: $["architecture":"i386", "continue_mode":false, "delete_info":[], "installMap":$["bootmode":"CD", "cdrom":"cdrom", "release_no":1234], "install_info":[["ap2/pilot-link.rpm", "PalmPilot Link Tool (Backup, Memo etc.)", 1, false], ["perl2/perl-PDA-Pilot.rpm", "PalmPilot Perl Module", 1, false], ["xap2/jpilot.rpm", "PalmPilot Desktop f\303\274r Linux", 1, false]], "language":"de_DE", "post_install":true, "targetroot":"/", "test_mode":true]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 1
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Read	.probe.cdrom [$["dev_name":"/dev/sr0"]]
Execute	.target.bash "/bin/mount /dev/cdrom /var/adm/mount 2> /var/log/y2logMount" 1
Read	.yast2.instsource.cdnum 1
Read	.yast2.instsource.cdrelease 1234
Default value: no key 'target' in $[]
Write	.target.ycp "/tmp/pacs_to_install.ycp" [] true
Execute	.target.bash "/bin/umount /var/adm/mount" 1
Execute	.target.bash "/bin/umount /var/adm/mount" 1
Return	`next
Dump	TEST 4: argument path/package.rpm, which means install package without checking deps
Read	.probe.architecture "i386"
Read	.target.root "/"
Read	.run.df [$["dummy":"on", "free":"Available", "name":"Mounted", "prz":"Capacity", "spec":"Filesystem", "used":"Used", "whole":"1024-blocks"], $["free":"144988", "name":"/", "prz":"93%", "spec":"/dev/sda1", "used":"1733600", "whole":"1981000"], $["free":"2124147", "name":"/usr", "prz":"66%", "spec":"/dev/sda3", "used":"4080331", "whole":"6543449"]]
SW_SINGLE: partition input: [$["free":144988, "name":"/", "used":1733600], $["free":2124147, "name":"usr", "used":4080331]]
SW_SINGLE: POSTFIX: .rpm
Execute	.target.bash "test -f ./gnuchess.rpm" 0
Execute	.target.bash "/bin/umount /var/adm/mount" 0
Return	`next
Dump	TEST 5: without .test -> popup packager error because can't read rpm database (not root)
Read	.probe.architecture "i386"
Read	.target.root "/"
Read	.run.df [$["dummy":"on", "free":"Available", "name":"Mounted", "prz":"Capacity", "spec":"Filesystem", "used":"Used", "whole":"1024-blocks"], $["free":"144988", "name":"/", "prz":"93%", "spec":"/dev/sda1", "used":"1733600", "whole":"1981000"], $["free":"2124147", "name":"/usr", "prz":"66%", "spec":"/dev/sda3", "used":"4080331", "whole":"6543449"]]
SW_SINGLE: partition input: [$["free":144988, "name":"/", "used":1733600], $["free":2124147, "name":"usr", "used":4080331]]
SW_SINGLE: POSTFIX: .rpm
Execute	.target.bash "test -f ./gnuchess.rpm" 0
Execute	.target.bash "/bin/rm /var/log/y2logRPM*" 0
Execute	.target.bash "/bin/umount /var/adm/mount" 0
Return	`next

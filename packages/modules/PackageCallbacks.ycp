/**
 * Module: 		PackageCallbacks.ycp
 *
 * Authors:		Gabriele Strattner <gs@suse.de>
 *			Klaus Kaempf <kkaempf@suse.de>
 *
 * Purpose: 		provides the default Callbacks for Pkg::
 *
 * $Id$
 */

{
    module "PackageCallbacks";

    textdomain "packager";

   global boolean _provide_popup = false;

   //--------------------------------------------------------------------------
   // defaults

   /** at start of file providal
    *
    */
   global define void StartProvide (string name, integer archivesize, boolean remote)
   ``{
	if (remote)
	{
	    term providebox = `HBox (`HStretch(),
				     `VBox( `Label(`id(`package), name ),
				     `VSpacing(),
				     `HBox(`ProgressBar(`id(`progress), " ", 100, 0 )),
				     `HStretch()
				  ));
	    UI::OpenDialog( providebox );
	    _provide_popup = true;
	}
	return;
   }


   /** during file providal
    *
    */
   global define void ProgressProvide (integer percent)
   ``{
	if (_provide_popup)
	    UI::ChangeWidget(`id(`progress), `Value, percent);
	return;
   }


   /** during file providal
    *
    */
   global define void DoneProvide (integer error, string reason)
   ``{
	if (_provide_popup)
	    UI::CloseDialog();
	return;
   }


   /** at start of package install
    *
    */
   global define void StartInstall (string name, string summary, integer installsize, boolean is_delete)
   ``{
	term packagebox = `HBox (`HStretch(),
				     `VBox( `Label(`id(`package), name ),
				     `VSpacing(),
				     `HBox(`ProgressBar(`id(`progress), " ", 100, 0 )),
				     `HStretch()
				  ));
	    UI::OpenDialog( `opt(`decorated), packagebox );

	return;
   }


   /** during package install
    *
    */
   global define void ProgressInstall (integer percent)
   ``{
	UI::ChangeWidget(`id(`progress), `Value, percent);
	return;
   }


   /** after package install
    *
    */
   global define void DoneInstall (string name)
   ``{
	UI::CloseDialog();
	return;
   }


    /**
     * media change callback
     *
     */
    global define string MediaChange (string product, string error, integer current, integer wanted)
    ``{
	y2milestone ("change (err %1, now %2, want %3)", error, current, wanted);
	// prompt user for product (%1, e.g. "SuSE Linux Professional 8.1") and media (%2, e.g. "CD 1"),
	string message = sformat (_("Please insert %1 %2."), wanted);
	string info = sformat ("Found media #%1 (error %2)", current, error);
	any ret = MediaUI::ChangeMediumPopup (message, info);
	if (ret == `continue)
	    return "";
	return "1";
    }

    /**
     * media open/attach callback
     *
     */
    global define string MediaError (integer error)
    ``{
	y2milestone ("MediaError(%1)", error);
	UI::MessagePopup ("Error accessing media:\n"+error);
	return "";
    }


    /**
     * constructor
     *
     */

    define void PackageCallbacks()
    ``{
	Pkg::CallbackStartProvide ("PackageCallbacks::StartProvide");
	Pkg::CallbackProgressProvide ("PackageCallbacks::ProgressProvide");
	Pkg::CallbackDoneProvide ("PackageCallbacks::DoneProvide");
	Pkg::CallbackStartPackage ("PackageCallbacks::StartPackage");
	Pkg::CallbackProgressPackage ("PackageCallbacks::ProgressPackage");
	Pkg::CallbackDonePackage ("PackageCallbacks::DonePackage");

	foreach (`src, Pkg::SourceGetCurrent(),
	``{
	    Pkg::CallbackMediaChange (src, "PackageCallbacks::MediaChange");
	    Pkg::CallbackMediaError (src, "PackageCallbacks::MediaError");
	});

    }
}

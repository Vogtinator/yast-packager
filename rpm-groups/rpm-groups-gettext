#!/usr/bin/perl -w
#
# rpm-groups_gettext - make GNU gettext .pot file from RPM group tags file
#
# Author: Stefan Hundhammer <sh@suse.de>
#

use strict;
use English;
use POSIX qw(strftime);

my $infile	= "rpm-groups.txt";
my $outfile	= "rpm-groups.pot";
my $line_no	= 0;
my $verbose	= 1;
my $line;
my $timestamp;


if ( $#ARGV >= 0 )
{
    $infile = shift @ARGV;
}

if ( $#ARGV >= 0 )
{
    $outfile = shift @ARGV;
}


# Read $infile, split lines into slash-separated components and make a hash
# entry in %tags for each.

my %tags;

open ( SRC, $infile ) or die "FATAL: Can't open $infile";

while ( $line = <SRC> )
{
    chomp $line;	# delete trailing newline, if any
    my $subtag;

    foreach $subtag ( split( '/', $line ) )
    {
	$tags{ $subtag } .= "#. $line\n";
    }
}

close ( SRC );



# Write .pot-File header

open ( POT,  ">" . $outfile ) or die "FATAL: Can't open $outfile";

print "$infile -> $outfile\n" if $verbose;

print POT <<'HEADER';
# Translations for rpm group tags
# Auto generated by groups_gettext
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SuSE\n"
HEADER

$timestamp = strftime "%Y-%m-%d %H:%M%z", localtime;
print POT "\"POT-Creation-Date: $timestamp\\n\"\n";

print POT <<'HEADER';
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"

HEADER


# Write a msgstr / msgid entry for each hash entry

my $tag;

foreach $tag ( sort keys %tags )
{
    my $comment = $tags{ $tag };
    my @comment_lines = split( "\n", $comment );

    if ( $#comment_lines > 5 )	# limit comment to 5 lines
    {
	$#comment_lines = 5;	# cut array size
	$comment = join( "\n", @comment_lines ) . "\n#. ...\n";
    }

    $comment .= "#. (All packages)\n"	if ( $comment =~ /zall/ );
    $comment .= "#. (Search result)\n"	if ( $comment =~ /z\?\?/ );

    print POT $comment;
    print POT "msgid \"$tag\"\n";
    print POT "msgstr \"\"\n";
    print POT "\n";
}


close ( POT );


/**
 * Module:	inst_dirinstall.ycp
 *
 * Authors:	Anas Nashif<nashif@suse.de>
 *
 * Purpose:	Install into directory
 *
 * $Id$
 */

{
    textdomain "packager";
    import "DirInstall";
    import "Installation";
    import "Popup";
    import "SlideShow";
    import "PackageInstallation";
    import "PackageCallbacks";
    import "Wizard";


    if(Pkg::TargetInit (Installation::destdir,true) != true)
    {
        if(Popup::ContinueCancel(_("Initializing the target directory failed")) == false)
        {
            return `abort;
        }
    }
    Wizard::CreateDialog();

    SCR::Execute(.target.mkdir,Installation::destdir+"/var/log/YaST2");
    SCR::Execute(.target.mkdir,Installation::destdir+"/etc");

    boolean newsystem = SCR::Read (.target.size, Installation::destdir+"/dev/null") < 0;


    boolean anyToDelete = Pkg::PkgAnyToDelete();
    SlideShow::SetLanguage (UI::GetLanguage(true));
    SlideShow::InitPkgData();
    SlideShow::OpenSlideShowDialog();

    Pkg::TargetLogfile (Installation::destdir+"/var/log/YaST2/y2logRPM");
    integer oldvmlinuzsize = (integer) SCR::Read(.target.size, "/boot/vmlinuz");
    list commit_result = PackageInstallation::CommitPackages (0, 0);                         // Y: commit them !
    integer newvmlinuzsize = (integer) SCR::Read(.target.size, "/boot/vmlinuz");

    SlideShow::CloseSlideShowDialog();


    if(newsystem)
    {
        if(DirInstall::runme_at_boot == true)
        {
            SCR::Execute(.target.mkdir,Installation::destdir+"/var/lib/YaST2");
            SCR::Execute(.target.bash,"/usr/bin/touch "+Installation::destdir+"/var/lib/YaST2/runme_at_boot");
        }
    }

    UI::CloseDialog();


    return `next;
}
